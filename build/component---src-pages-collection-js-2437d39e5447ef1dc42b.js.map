{"version":3,"sources":["webpack://restaurant-frontend/./src/pages/collection.js"],"names":["pageStyles","display","flexDirection","color","padding","fontFamily","filterContainer","justifyContent","width","inputStyle","flex","marginRight","border","borderRadius","overflow","tableStyle","marginTop","array","useState","loading","setLoading","query","setQuery","collections","setCollections","column","title","key","render","_","record","indexOf","dataIndex","name","restaurants","map","r","i","useEffect","collectionService","then","response","data","style","marginBottom","href","placeholder","onChange","e","target","value","columns","dataSource","filter","c","toLowerCase","includes","console","log"],"mappings":"yLAQMA,G,QAAa,CACjBC,QAAS,OACTC,cAAe,SACfC,MAAO,UACPC,QAAS,OACTC,WAAY,6CAERC,EAAkB,CACtBL,QAAS,OACTC,cAAe,MACfK,eAAgB,gBAChBC,MAAO,QAEHC,EAAa,CACjBC,KAAM,EACNC,YAAa,OACbC,OAAQ,kBACRC,aAAc,EACdC,SAAU,UAENC,EAAa,CACjBC,UAAW,OACXJ,OAAQ,kBACRC,aAAc,GACdC,SAAU,UA4DZ,UAvCmB,WAAO,IAlBJG,EAkBG,GACOC,eAAS,GAAhCC,EADgB,KACPC,EADO,QAEGF,cAAS,IAA5BG,EAFgB,KAETC,EAFS,QAGeJ,cAAS,IAAxCK,EAHgB,KAGHC,EAHG,KAIjBC,GAtBcR,EAsBQM,EAtBE,CAC9B,CACEG,MAAO,IAAKC,IAAK,KAAMnB,MAAO,OAAQoB,OAAQ,SAACC,EAAGC,GAAJ,OAAe,yBAAIb,EAAMc,QAAQD,GAAU,KAE3F,CACEJ,MAAO,kBACPC,IAAK,OACLK,UAAW,OACXJ,OAAQ,SAACK,GAAD,OAAU,yBAAIA,KAExB,CACEP,MAAO,cACPC,IAAK,cACLK,UAAW,cACXJ,OAAQ,SAACM,GAAD,OAAiBA,EAAYC,KAAI,SAACC,EAAGC,GAAJ,OAAU,qBAAGV,IAAKU,GAAID,UAmBjE,OATAE,gBAAU,WACRC,UAEGC,MAAK,SAACC,GACLjB,EAAeiB,EAASC,MACxBtB,GAAW,QAEd,IAGD,gBAAC,IAAD,CAAQuB,MAAO3C,GACb,sBAAI2C,MAAO,CAAEC,cAAe,IAA5B,iCACA,yEAEG,IAFH,wFAIG,IACD,qBAAGC,KAAK,KAAR,SAEF,uBAAKF,MAAOrC,GACV,gBAAC,IAAD,CAAOwC,YAAY,yBAAyBC,SAAU,SAACC,GAAD,OAAO1B,EAAS0B,EAAEC,OAAOC,QAAQA,MAAO7B,EAAOsB,MAAOlC,KAE9G,gBAAC,IAAD,CACE0C,QAAS1B,EACT2B,WAAY7B,EAAY8B,QAAO,SAACC,GAAD,OAAOA,EAAErB,KAAKsB,cAAcC,SAASnC,EAAMkC,kBAC1EZ,MAAO5B,EACPI,QAASA,IAEVsC,QAAQC,IAAInC","file":"component---src-pages-collection-js-2437d39e5447ef1dc42b.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Input, Layout, Table,\n} from 'antd';\n\nimport collectionService from '../services/collection';\nimport 'antd/dist/antd.css';\n\nconst pageStyles = {\n  display: 'flex',\n  flexDirection: 'column',\n  color: '#232129',\n  padding: '96px',\n  fontFamily: '-apple-system, Roboto, sans-serif, serif',\n};\nconst filterContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-between',\n  width: '100%',\n};\nconst inputStyle = {\n  flex: 1,\n  marginRight: '16px',\n  border: '1px solid black',\n  borderRadius: 8,\n  overflow: 'hidden',\n};\nconst tableStyle = {\n  marginTop: '16px',\n  border: '1px solid black',\n  borderRadius: 16,\n  overflow: 'hidden',\n};\n\nconst renderColumn = (array) => [\n  {\n    title: '#', key: 'id', width: '75px', render: (_, record) => <p>{array.indexOf(record) + 1}</p>,\n  },\n  {\n    title: 'Collection Name',\n    key: 'name',\n    dataIndex: 'name',\n    render: (name) => <p>{name}</p>,\n  },\n  {\n    title: 'Restaurants',\n    key: 'restaurants',\n    dataIndex: 'restaurants',\n    render: (restaurants) => restaurants.map((r, i) => <p key={i}>{r}</p>),\n  },\n];\n\nconst Collection = () => {\n  const [loading, setLoading] = useState(true);\n  const [query, setQuery] = useState('');\n  const [collections, setCollections] = useState([]);\n  const column = renderColumn(collections);\n\n  useEffect(() => {\n    collectionService\n      .get()\n      .then((response) => {\n        setCollections(response.data);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <Layout style={pageStyles}>\n      <h1 style={{ marginBottom: -4 }}>Restaurant Collection Browser</h1>\n      <p>\n        Browse restaurant collection using our tools.\n        {' '}\n        Just input your keywords and enjoy the results! or you can also search the restaurant\n        {' '}\n        <a href=\"/\">here</a>\n      </p>\n      <div style={filterContainer}>\n        <Input placeholder=\"Search collection name\" onChange={(e) => setQuery(e.target.value)} value={query} style={inputStyle} />\n      </div>\n      <Table\n        columns={column}\n        dataSource={collections.filter((c) => c.name.toLowerCase().includes(query.toLowerCase()))}\n        style={tableStyle}\n        loading={loading}\n      />\n      {console.log(collections)}\n    </Layout>\n  );\n};\n\nexport default Collection;\n"],"sourceRoot":""}